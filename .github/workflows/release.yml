name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run semantic-release
        run: pnpx semantic-release
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Update version in web/package.json
        run: |
          VERSION=$(jq -r .version package.json)
          jq ".version = \"$VERSION\"" web/package.json > tmp.$$.json && mv tmp.$$.json web/package.json
        shell: bash

      - name: Commit updated web/package.json
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add web/package.json
          git commit -m "chore(release): sync version with root package.json [skip ci]"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}