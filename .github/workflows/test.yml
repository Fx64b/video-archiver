name: Test

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read
  pull-requests: write

jobs:
  backend_unit_tests:
    runs-on: ubuntu-latest
    name: Backend Unit Tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('services/backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        working-directory: ./services/backend
        run: go mod download

      - name: Run tests with race detector
        working-directory: ./services/backend
        run: |
          go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Display coverage summary
        working-directory: ./services/backend
        run: |
          echo "## Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          go tool cover -func=coverage.out | tail -20 >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage to artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: services/backend/coverage.out
          retention-days: 30

  test_summary:
    runs-on: ubuntu-latest
    name: Test Summary
    needs: [backend_unit_tests]
    if: always()

    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.backend_unit_tests.result }}" != "success" ]]; then
            echo "❌ Backend tests failed!"
            exit 1
          fi
          echo "✅ All tests passed!"
