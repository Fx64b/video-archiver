name: Build and Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  backend_tests:
    runs-on: ubuntu-latest
    name: Backend Unit Tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        working-directory: ./services/backend
        run: go mod download

      - name: Run unit tests
        working-directory: ./services/backend
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Generate coverage report
        working-directory: ./services/backend
        run: go tool cover -func=coverage.out

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: services/backend/coverage.out

  docker_compose_build:
    runs-on: ubuntu-latest
    name: Docker Compose Build and Test
    needs: backend_tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate Docker Compose configuration
        run: |
          docker compose config --quiet

      - name: Build with Docker Compose
        run: |
          docker compose build
